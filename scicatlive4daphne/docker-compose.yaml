services:

  reverse-proxy:
    image: traefik:2.5
    command: --api.insecure=true --providers.docker=true --entrypoints.web.address=:80
    ports:
      - "80:80"
    #  - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure
      
  mongodb:
    image: mongo:4.2-bionic
    volumes:
      - "/srv/mongodb/data:/data/db" # check that is mount exists on local filesystem at least until mongodb
      # - "/srv/mongobackup:/backup"  # this is a path mounted in the mongodb container to store database backups 
      # - "./backup.sh:/backup.sh"   # a simple backup script that can be run using e.g `docker exec scicatlive4daphne_mongodb_1 /backup.sh` in a cron job
      - "./config/demo_seed_db:/docker-entrypoint-initdb.d"  # comment this line if you do not wish to populate a demo db

  backend:
    image: ghcr.io/scicatproject/backend-next:v4.3.1   #there is also a tag 'stable'
    depends_on:
      - mongodb
    volumes:
      - ./config/backend/config.env:/home/node/app/.env
      - ./config/backend/functionalAccounts.json:/home/node/app/functionalAccounts.json
      - ./config/frontend/config.json:/home/node/app/dist/src/config/frontend.config.json


    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`, `/auth`, `/explorer`)"
      - "traefik.http.routers.backend.entrypoints=web"
    restart: on-failure
      
  frontend:
    #image: ghcr.io/scicatproject/frontend:stable
    image: ghcr.io/schreiber-lab/scicat-frontend:daphne_button_v4.3.1
    depends_on:
      - backend
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
    volumes:
      # - ./config/frontend/config.json ... now to be mounted through the backend!
      - ./config/frontend/site-logo.png:/usr/share/nginx/html/assets/images/site-logo.png

  upload-frontend:
    image: ghcr.io/schreiber-lab/scicat-schema-extension-frontend:latest
    #build:
    #  context: https://github.com/schreiber-lab/scicat-schema-extension.git#main:frontend
    volumes:
      - ./config/upload/env.js:/usr/share/nginx/html/upload/env.js
    labels:
    # Match on the hostname and the path
      - traefik.http.routers.upload-frontend.rule=PathPrefix(`/upload`)
    restart: on-failure

  backend-addon:
    image: ghcr.io/schreiber-lab/scicat-schema-extension-backend:latest
    #build:
    #  context: https://github.com/schreiber-lab/scicat-schema-extension.git#main:backend
    depends_on:
      - mongodb
    labels:
    # Match on the hostname and the path
      - traefik.http.routers.api-addons.rule=PathPrefix(`/addons`,`/flask-apispec`,`/swagger`)
  #    - traefik.http.services.api-addons.loadbalancer.server.port=5000
    restart: on-failure

  mongo-express:
    image: mongo-express
    environment:
        - ME_CONFIG_MONGODB_SERVER=mongodb
        - ME_CONFIG_MONGODB_PORT=27017
        - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
        - "ME_CONFIG_BASICAUTH_USERNAME="
        - "ME_CONFIG_BASICAUTH_PASSWORD="
        - "ME_CONFIG_SITE_BASEURL=/mongodb/"
    depends_on:
        - mongodb

    labels:
       - traefik.http.routers.mongo-express.rule=PathPrefix(`/mongodb`)
       - traefik.http.services.mongo-express.loadbalancer.server.port=8081
       - "traefik.http.routers.mongo-express.middlewares=auth"
       - "traefik.http.middlewares.auth.basicauth.users=admin:$$2a$$12$$vyTh8.zQ85OygVq1q4cX4u50QJXfW1tSJn/dr2zuQFzAW6F31VUtq"
         # the default user pre-perpeared here uses the admin login of scicatlive
         # use bcrypt e.g. https://bcrypt-generator.com/

    restart: on-failure
